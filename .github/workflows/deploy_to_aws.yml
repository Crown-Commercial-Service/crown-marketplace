name: "Deploy latest code to AWS"

on:
  push:
    branches:
      - develop
      - master
      - preview
      - production

jobs:
  determine-environment:
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.determine_environment.outputs.env_name }}
    steps:
      - name: Determine the environment to deploy to
        id: determine_environment
        run: |
          echo "Running on branch ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            echo "::set-output name=env_name::CMPDEV"
          elif [ "${{ github.ref }}" = "refs/heads/develop" ]; then
            echo "::set-output name=env_name::Sandbox"
          elif [ "${{ github.ref }}" = "refs/heads/preview" ]; then
            echo "::set-output name=env_name::Preview"
          elif [ "${{ github.ref }}" = "refs/heads/production" ]; then
            echo "::set-output name=env_name::Production"
          else
             echo "::set-output name=env_name::FAIL"
          fi         

      - name: Fail if not an environment
        run: |
          echo "ERROR: No environment found"
          exit 1
        if: steps.determine_environment.outputs.env_name == 'FAIL'

      - name: Show where we are deploying to
        run: echo "We will deploy to ${{ steps.determine_environment.outputs.env_name }}"

  run-unit-tests:
    needs:
      - determine-environment
    uses: ./.github/workflows/unit_tests.yaml

  run-feature-tests:
    needs: 
      - determine-environment
    uses: ./.github/workflows/feature_tests.yaml
    with:
      run_all_feature_tests: true

  deploy-to-application:
    runs-on: ubuntu-latest
    needs:
      - determine-environment
      - run-unit-tests
      - run-feature-tests
    environment:
      name: ${{ needs.determine-environment.outputs.env_name }}
    steps:
      - name: Trigger AWS CodePipeline - main container
        uses: zulhfreelancer/aws-codepipeline-action@v1.0.7
        with:
          aws-region:  ${{ secrets.AWS_PIPELINE_REGION }}
          aws-access-key: ${{ secrets.AWS_PIPELINE_ACCESS_KEY }}
          aws-secret-key: ${{ secrets.AWS_PIPELINE_SECRET_KEY }}
          pipeline-name: ${{ secrets.AWS_PIPELINE_MAIN_NAME }}

  deploy-to-sidekiq:
    runs-on: ubuntu-latest
    needs:
      - determine-environment
      - run-unit-tests
      - run-feature-tests
    environment:
      name: ${{ needs.determine-environment.outputs.env_name }}
    steps:
      - name: Trigger AWS CodePipeline - sidekiq container
        uses: zulhfreelancer/aws-codepipeline-action@v1.0.7
        with:
          aws-region:  ${{ secrets.AWS_PIPELINE_REGION }}
          aws-access-key: ${{ secrets.AWS_PIPELINE_ACCESS_KEY }}
          aws-secret-key: ${{ secrets.AWS_PIPELINE_SECRET_KEY }}
          pipeline-name: ${{ secrets.AWS_PIPELINE_SIDEKIQ_NAME }}
